@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {

    /* DreamCut UI Variables */
    --dream-blur: rgba(0, 0, 0, 0.8);
    --dream-shine: rgba(255, 255, 255, 0.1);
    --dream-gradient-start: rgba(255, 255, 255, 0.01);
    --dream-gradient-end: rgba(255, 255, 255, 0);
    
    /* Animation Durations */
    --dream-transition-duration: 500ms;
    --dream-animation-duration: 800ms;
    
    /* Shadow Values */
    --dream-shadow-sm: 0px 2px 4px rgba(0, 0, 0, 0.3);
    --dream-shadow: 0px 4px 12px rgba(0, 0, 0, 0.5);
    --dream-shadow-lg: 0px 8px 24px rgba(0, 0, 0, 0.7);
    --dream-shadow-xl: 0px 12px 32px rgba(0, 0, 0, 0.9);
    
    /* Glow Effects */
    --dream-glow-sm: 0 0 10px rgba(99, 102, 241, 0.3);
    --dream-glow: 0 0 20px rgba(99, 102, 241, 0.5);
    --dream-glow-lg: 0 0 30px rgba(99, 102, 241, 0.7);


    /* Default dark mode theme */
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --radius: 0.75rem;

    /* DreamUI dark mode variables by default */
    --card-blur: rgba(0, 0, 0, 0.8);
    --shine-top: rgba(255, 255, 255, 0.1);
    --gradient-start: rgba(255, 255, 255, 0.01);
    --gradient-end: rgba(255, 255, 255, 0);
  }

  /* Light mode class */
  .light {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;

    /* DreamUI light mode variables */
    --card-blur: rgba(255, 255, 255, 0.8);
    --shine-top: rgba(255, 255, 255, 0.2);
    --gradient-start: rgba(255, 255, 255, 0.03);
    --gradient-end: rgba(255, 255, 255, 0);
  }
}


/* DreamCut Animation Keyframes */
@keyframes dream-fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes dream-slide-up {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes dream-scale {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}


/* DreamCut Utility Classes */
.dream-blur {
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
}

.dream-shine {
  background: linear-gradient(
    to bottom,
    var(--dream-gradient-start),
    var(--dream-gradient-end)
  );
  border-top: 1px solid var(--dream-shine);
}

.shadow-dream {
  box-shadow: var(--dream-shadow);
}

.shadow-dream-lg {
  box-shadow: var(--dream-shadow-lg);
}

.glow-dream {
  box-shadow: var(--dream-glow);
}


/* Hover Effects */
.hover-dream {
  transition: all var(--dream-transition-duration) cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-dream:hover {
  transform: translateY(-1px);
  box-shadow: var(--dream-shadow-lg);
}

/* Animation Classes */
.animate-dream-fade {
  animation: dream-fade-in var(--dream-animation-duration) ease-out;
}

.animate-dream-slide {
  animation: dream-slide-up var(--dream-animation-duration) ease-out;
}

.animate-dream-scale {
  animation: dream-scale var(--dream-animation-duration) ease-out;
}



/* Base styles */
* {
  @apply border-border;
}

body {
  @apply bg-background text-foreground;
}

/* DreamUI Animations */
@keyframes blurUp {
  0% {
    opacity: 0;
    transform: translateY(20px) scale(0.9);
    filter: blur(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0px) scale(1);
    filter: blur(0px);
  }
}

@keyframes blurDown {
  0% {
    opacity: 0;
    transform: translateY(-20px) scale(0.9);
    filter: blur(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0px) scale(1);
    filter: blur(0px);
  }
}

@keyframes blurDownInfinite {
  0% {
    opacity: 0;
    transform: translateY(-20px) scale(0.9);
    filter: blur(10px);
  }
  20% {
    opacity: 1;
    transform: translateY(0px) scale(1);
    filter: blur(0px);
  }
  80% {
    opacity: 1;
    transform: translateY(0px) scale(1);
    filter: blur(0px);
  }
  100% {
    opacity: 0;
    transform: translateY(-20px) scale(0.9);
    filter: blur(10px);
  }
}

@keyframes fadeIn {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes scaleIn {
  0% {
    transform: scale(0.95) translateY(20px);
    opacity: 0;
  }
  100% {
    transform: scale(1) translateY(0px);
    opacity: 1;
  }
}

/* DreamUI Utility Classes */
.shine {
  border-top: 0.5px solid var(--shine-top);
  background-image: linear-gradient(
    to bottom,
    var(--gradient-start),
    var(--gradient-end)
  );
}

.shine-large {
  border-top: 0.5px solid rgba(255, 255, 255, 0.3);
  background-image: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.1),
    rgba(255, 255, 255, 0)
  );
}

.glow {
  box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.6);
}

.text-glow {
  text-shadow: 0px 0px 30px rgba(255, 255, 255, 0.2);
}

/* Scrollbar and Selection Utilities */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}

.no-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.noselect {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Focus Styles - Dark by Default */
a:focus,
input:focus[type="text"],
input:focus[type="number"],
textarea:focus,
button:focus,
select:focus {
  box-shadow: 0px 0px 0px 0px rgba(255, 255, 255, 0.5),
    0px 0px 10px 0px rgba(255, 255, 255, 0.3),
    0px 0px 10px 0px rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.5);
  outline: 1px solid rgba(255, 255, 255, 0.1);
}

/* Light mode focus styles */
.light a:focus,
.light input:focus[type="text"],
.light input:focus[type="number"],
.light textarea:focus,
.light button:focus,
.light select:focus {
  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.03),
    0px 0px 2px 0px rgba(0, 0, 0, 0.1), 
    0px 5px 5px 0px rgba(0, 0, 0, 0.03);
  border-color: rgba(0, 0, 0, 0.5);
  outline: 1px solid rgba(0, 0, 0, 0.1);
}

.dark-strong:focus {
  box-shadow: 0px 0px 0px 0px rgba(255, 255, 255, 0.8),
    0px 0px 10px 0px rgba(255, 255, 255, 0.3),
    0px 0px 10px 0px rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.8);
  outline: 1px solid rgba(255, 255, 255, 0.3);
}

/* Smooth Transitions */
a,
input,
button {
  transition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);
}

/* Directory Styles */
.directory-divide-y > li:not(:last-child):after {
  content: '';
  display: block;
  width: calc(100% - 24px);
  transform: translateX(24px);
  height: 1px;
  background: #333333;
}

/* Markdown Styles */
.markdown-content {
  line-height: 1.6;
  color: var(--foreground);
}

.markdown-content h1,
.markdown-content h2,
.markdown-content h3,
.markdown-content h4,
.markdown-content h5,
.markdown-content h6 {
  margin-top: 0.5em;
  margin-bottom: 1em;
  font-weight: bold;
  color: var(--foreground);
}

.markdown-content h1 { font-size: 1.5em; }
.markdown-content h2 { font-size: 1.2em; }
.markdown-content h3 { font-size: 1.1em; }
.markdown-content h4 { font-size: 1em; }
.markdown-content h5 { font-size: 0.83em; }
.markdown-content h6 { font-size: 0.67em; }

.markdown-content p {
  margin-bottom: 2em;
}

.markdown-content ul,
.markdown-content ol {
  margin-bottom: 2em;
  padding-left: 1.5em;
}

.markdown-content ul { list-style-type: disc; }
.markdown-content ol { list-style-type: decimal; }

.markdown-content li {
  margin-bottom: 0.5em;
}

.markdown-content a {
  color: #60a5fa;
  text-decoration: underline;
}

/* Confetti Animation */
.confetti {
  position: absolute;
  width: 10px;
  height: 10px;
  transform-origin: center bottom;
  animation: fall 4s linear infinite;
}

.confetti.square {
  clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 100% 0%);
}

.confetti.triangle {
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

@keyframes fall {
  0% {
    opacity: 1;
    transform: translateY(0) rotate(0deg);
  }
  100% {
    opacity: 0;
    transform: translateY(100vh) rotate(720deg);
  }
}